name: Publish Python Package to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
  workflow_run:
    types:
      - completed

permissions:
  id-token: write
  contents: read

jobs:
  publish-to-pypi:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/parsescore-client

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version_from_tag
        run: |
          # GITHUB_REF_NAME will be the tag (e.g., v0.1.2)
          TAG_NAME="${{ github.ref_name }}"
          # Remove 'v' prefix
          PACKAGE_VERSION="${TAG_NAME#v}"
          echo "package_version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
          echo "Version from tag: ${PACKAGE_VERSION}"
        shell: bash

      - name: Verify pyproject.toml version matches tag
        run: |
          PYPROJECT_PATH="pyproject.toml" # Adjust if needed
          PYPROJECT_VERSION=$(python -c "import tomllib; print(tomllib.load(open('${PYPROJECT_PATH}', 'rb'))['project']['version'])")
          TAG_VERSION="${{ steps.get_version_from_tag.outputs.package_version }}"
          
          echo "Version from tag: ${TAG_VERSION}"
          echo "Version from pyproject.toml: ${PYPROJECT_VERSION}"
          
          if [ "${PYPROJECT_VERSION}" != "${TAG_VERSION}" ]; then
            echo "Error: Version in pyproject.toml (${PYPROJECT_VERSION}) does not match tag version (${TAG_VERSION})."
            exit 1
          fi
          echo "Versions match."
        shell: bash

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Set up Python (using version from pyproject.toml)
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Build package
        run: uv build

      - name: Store the distribution packages (optional, for inspection)
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions-${{ steps.get_version_from_tag.outputs.package_version }}
          path: dist/

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
